<Application xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1p1="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:converters="clr-namespace:TeamKits.Converters"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:custom="clr-namespace:TeamKits.Controls"
             xmlns:viewModels="clr-namespace:TeamKits.ViewModels"
             xmlns:views="clr-namespace:TeamKits.Views"
             x:Class="TeamKits.App"
             Startup="Application_Startup"
             d1p1:Ignorable="d">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colors.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary>

                    <converters:StringColorToBrushConverter x:Key="stringToBrush" />
                    <BooleanToVisibilityConverter x:Key="boolToVis"/>

                    <DataTemplate DataType="{x:Type viewModels:DialogViewModel}">
                        <views:DialogView />
                    </DataTemplate>

                    <ControlTemplate x:Key="ButtonTemplate">
                        <Border Width="100"
                                Height="50"
                                Margin="10 0">

                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver"
                                                 Value="True">
                                            <Setter Property="Background"
                                                    Value="#18739a" />
                                        </Trigger>
                                        <Trigger Property="IsMouseOver"
                                                 Value="False">
                                            <Setter Property="Background"
                                                    Value="#41b1e1" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>

                            <TextBlock TextAlignment="Center"
                                       Margin="0 5"
                                       Text="{Binding Content, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" />
                        </Border>
                    </ControlTemplate>

                    <Style TargetType="{x:Type TextBlock}"
                           x:Key="TeamKitTextBlock">
                        <Setter Property="Foreground"
                                Value="White" />
                        <Setter Property="FontWeight"
                                Value="Bold" />
                        <Setter Property="FontSize"
                                Value="16" />
                        <Setter Property="Margin"
                                Value="10" />
                        <Setter Property="HorizontalAlignment"
                                Value="Center" />
                    </Style>

                    <Style TargetType="{x:Type Border}"
                           x:Key="TeamKitBorder">
                        <Setter Property="Margin"
                                Value="10" />
                        <Setter Property="Height"
                                Value="100" />
                        <Setter Property="Width"
                                Value="100" />
                        <Setter Property="HorizontalAlignment"
                                Value="Center" />
                    </Style>

                    <Style TargetType="{x:Type Image}"
                           x:Key="TeamKitImage">
                        <Setter Property="Height"
                                Value="100" />
                        <Setter Property="Width"
                                Value="100" />
                    </Style>

                    <Style TargetType="{x:Type ComboBox}"
                           x:Key="TeamKitComboBox">
                        <Setter Property="Width"
                                Value="150" />
                        <Setter Property="Background"
                                Value="White" />
                    </Style>

                    <DataTemplate x:Key="ReadOnlyNumericTemplate">
                        <TextBlock Text="{Binding Id}"
                                   x:Name="player"
                                   TextAlignment="Center"
                                   Padding="10">

                        </TextBlock>
                    </DataTemplate>

                    <DataTemplate x:Key="EditingNumericTemplate">
                        <Border BorderBrush="Red"
                                BorderThickness="1">
                            <custom:DsTextBox Text="{Binding Id}"
                                              Input="Numeric"
                                              FontSize="18"
                                              Padding="5"
                                              FontWeight="Bold"
                                              TextAlignment="Center">
                            </custom:DsTextBox>
                        </Border>
                    </DataTemplate>

                    <!--Metro CellStyle-->
                    <Style TargetType="{x:Type DataGridCell}"
                           x:Key="MetroDataGridCell">
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="BorderBrush"
                                Value="Transparent" />
                        <Setter Property="Controls:DataGridCellHelper.SelectionUnit"
                                Value="{Binding Path=(Controls:DataGridRowHelper.SelectionUnit), Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                        <Setter Property="HorizontalContentAlignment"
                                Value="Stretch" />
                        <Setter Property="Padding"
                                Value="0" />
                        <Setter Property="SnapsToDevicePixels"
                                Value="True" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type DataGridCell}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                        <ContentPresenter Margin="{TemplateBinding Padding}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          Content="{TemplateBinding Content}"
                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="VerticalContentAlignment"
                                Value="Center" />
                        <Style.Triggers>
                            <!--IsSelected-->
                            <Trigger Property="IsSelected"
                                     Value="True">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource MetroDataGrid.HighlightBrush}" />
                            </MultiTrigger>

                            <!--IsKeyboardFocusWithin-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader"
                                               Value="True" />
                                    <Condition Property="IsKeyboardFocusWithin"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource MetroDataGrid.FocusBorderBrush}" />
                            </MultiTrigger>

                            <!--IsSelected and Selector.IsSelectionActive-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightTextBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader"
                                               Value="True" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource MetroDataGrid.InactiveSelectionHighlightBrush}" />
                            </MultiTrigger>

                            <!--IsMouseOver-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader"
                                               Value="True" />
                                    <Condition Property="IsMouseOver"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource MetroDataGrid.MouseOverHighlightBrush}" />
                            </MultiTrigger>

                            <!--IsEnabled-->
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>

                            <!--IsEnabled and IsSelected-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource MetroDataGrid.HighlightTextBrush}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Controls:DataGridCellHelper.IsCellOrRowHeader"
                                               Value="True" />
                                    <Condition Property="IsEnabled"
                                               Value="False" />
                                    <Condition Property="IsSelected"
                                               Value="True" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Background"
                                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                                <Setter Property="BorderBrush"
                                        Value="{DynamicResource MetroDataGrid.DisabledHighlightBrush}" />
                            </MultiTrigger>

                        </Style.Triggers>
                    </Style>

                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>
</Application>